
/*===============
    #Layout
===============*/
@media screen{
  .ge-header,
  .ge-footer {
    display: flex;
    flex-grow: 0;
    flex-shrink: 1;
    padding: 0 0.618rem .618rem;
  }
  .ge-header {
    flex-direction: row;
    min-height: 6vh;
    flex-wrap: wrap;
    order: -1;
  }
  .ge-header__title,
  .ge-header__subtitle {
    margin: 0;
  }
  .ge-header__title {
    font-size: 1.45rem;
    margin: 0 0 0 9rem;
  }
  .ge-header__subtitle {
    font-size: 2.25vw;
    flex-grow: 1;
  }
  .ge-header__logo {
    width: 6vw;
    position: absolute;
    z-index: -1;
  }
  .ge-footer {
      display: flex;
      flex-grow: 0;
      flex-shrink: 1;
      height: 49px;
      width: 100%;
      order: 10;
      flex-direction: column;
      align-items: center;
      &__legalese {
          color: colorNeutralLightest
      }
  }


  .main {
    display: flex;
    flex-grow: 1;
    padding: 0.618rem;
    flex-basis: 75vh;
    height: calc(100vh -  8vh  -  35px );
    overflow: hidden;
  }
}
body:before {
  content: "smartphone";
  display: none; /* Prevent from displaying. */
}
@media (min-width: 700px) {
  body:before {
    content: "tablet";
  }
}
@media (min-width: 1100px) {
  body:before {
    content: "desktop";
  }
}
/*Flex shenanigans*/
[class*="flex"]
    display:flex
    &[class*="column"]
      flex-direction: column;

    &[class*="row"] 
      flex-direction: row;

    for prop in space-between space-around center flex-start flex-end        
        &[class*=\"justify-{prop}\"]
            justify-content: prop;

    for prop in baseline center flex-start flex-end stretch
        &[class*=\"align-items-{prop}\"]
            align-items: prop
            
    for prop in baseline center flex-start flex-end stretch
        &[class*=\"align-content-{prop}\"]
            align-content: prop
            
    for prop in row column row-reverse column-reverse
        &[class*=\"direction-{prop}\"]
                flex-direction: prop

    for prop in nowrap wrap wrap-reverse
        &[class*=\"wrap-{prop}\"]
                flex-wrap: prop

    for num in -1..10
        &[class*=\"grow-n{num}\"]
            flex-grow: num
        &[class*=\"shrink-n{num}\"]
            flex-shrink: num
        &[class*=\"order-n{num}\"]
            order: num
    &[class*="basis-full"]
        flex-basis: 100%